# Generated by Django 5.2.7 on 2025-10-22 13:33

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('parcel', '0001_initial'),
        ('reservations', '0002_initial'),
        ('transport', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('excerpt', models.TextField(blank=True, max_length=500, verbose_name='Extrait')),
                ('publication_type', models.CharField(choices=[('promotion', 'Promotion'), ('news', 'Nouvelle'), ('maintenance', 'Maintenance'), ('security', 'Sécurité'), ('event', 'Événement'), ('alert', 'Alerte'), ('update', 'Mise à jour'), ('other', 'Autre')], default='news', max_length=20, verbose_name='Type de publication')),
                ('audience', models.CharField(choices=[('all', 'Tous les utilisateurs'), ('clients', 'Clients uniquement'), ('staff', 'Personnel uniquement'), ('agency', 'Par agence'), ('specific', 'Utilisateurs spécifiques'), ('drivers', 'Chauffeurs uniquement'), ('cashiers', 'Caissiers uniquement')], default='all', max_length=20, verbose_name='Public cible')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé'), ('expired', 'Expiré')], default='draft', max_length=20, verbose_name='Statut')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='En vedette')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='Épinglé')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin')),
                ('priority', models.PositiveIntegerField(choices=[(1, 'Normal'), (2, 'Important'), (3, 'Urgent')], default=1, verbose_name='Priorité')),
                ('image', models.ImageField(blank=True, null=True, upload_to='publications/%Y/%m/', verbose_name='Image')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='publications/attachments/%Y/%m/', verbose_name='Pièce jointe')),
                ('action_url', models.URLField(blank=True, verbose_name="Lien d'action")),
                ('action_text', models.CharField(blank=True, max_length=100, verbose_name="Texte de l'action")),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('click_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de clics')),
                ('share_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de partages')),
                ('meta_title', models.CharField(blank=True, max_length=200, verbose_name='Meta titre')),
                ('meta_description', models.TextField(blank=True, max_length=300, verbose_name='Meta description')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='Slug')),
                ('notification_sent', models.BooleanField(default=False, verbose_name='Notification envoyée')),
                ('last_notified', models.DateTimeField(blank=True, null=True, verbose_name='Dernière notification')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='publications', to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('target_agencies', models.ManyToManyField(blank=True, related_name='publications', to='locations.agency', verbose_name='Agences cibles')),
                ('target_users', models.ManyToManyField(blank=True, related_name='targeted_publications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateurs cibles')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
                'ordering': ['-is_pinned', '-priority', '-created'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('ticket_id', models.CharField(max_length=20, unique=True, verbose_name='Numéro de ticket')),
                ('category', models.CharField(choices=[('reservation', 'Réservation'), ('payment', 'Paiement'), ('parcel', 'Colis'), ('trip', 'Voyage'), ('account', 'Compte utilisateur'), ('technical', 'Problème technique'), ('complaint', 'Réclamation'), ('suggestion', 'Suggestion'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('status', models.CharField(choices=[('open', 'Ouvert'), ('in_progress', 'En cours'), ('waiting_customer', 'En attente client'), ('resolved', 'Résolu'), ('closed', 'Fermé'), ('cancelled', 'Annulé')], default='open', max_length=20, verbose_name='Statut')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('medium', 'Moyenne'), ('high', 'Haute'), ('urgent', 'Urgente')], default='medium', max_length=20, verbose_name='Priorité')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('description', models.TextField(verbose_name='Description')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='support/attachments/%Y/%m/', verbose_name='Pièce jointe')),
                ('response_time', models.DurationField(blank=True, null=True, verbose_name='Temps de réponse')),
                ('resolution_time', models.DurationField(blank=True, null=True, verbose_name='Temps de résolution')),
                ('satisfaction_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note de satisfaction')),
                ('satisfaction_comment', models.TextField(blank=True, verbose_name='Commentaire satisfaction')),
                ('first_response_at', models.DateTimeField(blank=True, null=True, verbose_name='Première réponse à')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Résolu à')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fermé à')),
                ('agency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_tickets', to='locations.agency', verbose_name='Agence')),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['admin', 'caissier', 'agency_manager']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('related_parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_tickets', to='parcel.parcel', verbose_name='Colis lié')),
                ('related_reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_tickets', to='reservations.reservation', verbose_name='Réservation liée')),
                ('related_trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='support_tickets', to='transport.trip', verbose_name='Voyage lié')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Ticket de support',
                'verbose_name_plural': 'Tickets de support',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('message', models.TextField(verbose_name='Message')),
                ('message_type', models.CharField(choices=[('customer', 'Message client'), ('agent', 'Message agent'), ('system', 'Message système')], default='customer', max_length=20, verbose_name='Type de message')),
                ('is_system', models.BooleanField(default=False, verbose_name='Message système')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Message interne')),
                ('is_first_response', models.BooleanField(default=False, verbose_name='Première réponse')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='support/messages/%Y/%m/', verbose_name='Pièce jointe')),
                ('read_by_customer', models.BooleanField(default=False, verbose_name='Lu par le client')),
                ('read_by_agent', models.BooleanField(default=False, verbose_name="Lu par l'agent")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_messages', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='publications.supportticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Message de support',
                'verbose_name_plural': 'Messages de support',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Succès'), ('warning', 'Avertissement'), ('error', 'Erreur'), ('reminder', 'Rappel'), ('alert', 'Alerte'), ('promotion', 'Promotion')], default='info', max_length=20, verbose_name='Type de notification')),
                ('status', models.CharField(choices=[('unread', 'Non lu'), ('read', 'Lu'), ('dismissed', 'Rejeté'), ('archived', 'Archivé')], default='unread', max_length=20, verbose_name='Statut')),
                ('channel', models.CharField(choices=[('in_app', "Dans l'application"), ('email', 'Email'), ('sms', 'SMS'), ('push', 'Notification push'), ('all', 'Tous les canaux')], default='in_app', max_length=20, verbose_name='Canal')),
                ('action_url', models.URLField(blank=True, verbose_name="Lien d'action")),
                ('action_label', models.CharField(blank=True, max_length=100, verbose_name="Label de l'action")),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icône')),
                ('image', models.ImageField(blank=True, null=True, upload_to='notifications/%Y/%m/', verbose_name='Image')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé à')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu à')),
                ('dismissed_at', models.DateTimeField(blank=True, null=True, verbose_name='Rejeté à')),
                ('should_send_email', models.BooleanField(default=False, verbose_name='Envoyer par email')),
                ('should_send_sms', models.BooleanField(default=False, verbose_name='Envoyer par SMS')),
                ('should_send_push', models.BooleanField(default=False, verbose_name='Envoyer par push')),
                ('email_sent', models.BooleanField(default=False, verbose_name='Email envoyé')),
                ('sms_sent', models.BooleanField(default=False, verbose_name='SMS envoyé')),
                ('push_sent', models.BooleanField(default=False, verbose_name='Push envoyé')),
                ('notification_id', models.CharField(editable=False, max_length=20, unique=True, verbose_name='ID de notification')),
                ('related_parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='parcel.parcel', verbose_name='Colis lié')),
                ('related_reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='reservations.reservation', verbose_name='Réservation liée')),
                ('related_trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='transport.trip', verbose_name='Voyage lié')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('related_publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='publications.publication', verbose_name='Publication liée')),
                ('related_support', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='publications.supportticket', verbose_name='Ticket support lié')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': (['-created'],),
            },
        ),
        migrations.AddIndex(
            model_name='publication',
            index=models.Index(fields=['status', 'is_active', 'start_date', 'end_date'], name='publication_status_62d281_idx'),
        ),
        migrations.AddIndex(
            model_name='publication',
            index=models.Index(fields=['publication_type'], name='publication_publica_3b16d8_idx'),
        ),
        migrations.AddIndex(
            model_name='publication',
            index=models.Index(fields=['audience'], name='publication_audienc_db45a0_idx'),
        ),
        migrations.AddIndex(
            model_name='publication',
            index=models.Index(fields=['slug'], name='publication_slug_c19642_idx'),
        ),
        migrations.AddIndex(
            model_name='publication',
            index=models.Index(fields=['is_featured'], name='publication_is_feat_5c571d_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['ticket_id'], name='publication_ticket__73fac6_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['user', 'status'], name='publication_user_id_63a5d3_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['category'], name='publication_categor_033602_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['priority'], name='publication_priorit_8ac9b8_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['assigned_to'], name='publication_assigne_191fce_idx'),
        ),
        migrations.AddIndex(
            model_name='supportmessage',
            index=models.Index(fields=['ticket', 'created'], name='publication_ticket__613b6e_idx'),
        ),
        migrations.AddIndex(
            model_name='supportmessage',
            index=models.Index(fields=['message_type'], name='publication_message_db6285_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='publication_user_id_223c7d_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created'], name='publication_created_9abe1b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='publication_notific_c7f043_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel'], name='publication_channel_3ce8eb_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_id'], name='publication_notific_be7a77_idx'),
        ),
    ]
